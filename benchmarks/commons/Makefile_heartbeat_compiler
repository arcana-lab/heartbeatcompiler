MACROS_HEARTBEAT_COMPILER += -DUSE_HB_COMPILER $(MACROS_HEARTBEAT)
FRONTEND_FLAGS_HEARTBEAT_COMPILER = \
	-O1 -emit-llvm \
	-Xclang -disable-llvm-passes \
	-Xclang -no-opaque-pointers \
	-Xclang -ffp-contract=off
FLAGS_HEARTBEAT_COMPILER += $(FLAGS_HEARTBEAT)
OPTS_HEARTBEAT_COMPILER += $(OPTS_HEARTBEAT)
LIBS_HEARTBEAT_COMPILER += $(LIBS_HEARTBEAT)

# ============================================
# Heartbeat Compiler
# ============================================
main.bc: main.cpp
	$(CXX) $(MACROS_HEARTBEAT_COMPILER) $(FRONTEND_FLAGS_HEARTBEAT_COMPILER) $(FLAGS_HEARTBEAT_COMPILER) -c $^ -o $@

main_normalized.bc: main.bc
	noelle-norm $^ -o $@

heartbeat_compiler.bc: main_normalized.bc
ifeq ($(ENABLE_ROLLFORWARD), true)
	make rf_test.bc
	llvm-link rf_test.bc $< -o $<
endif
	noelle-parallel-load -noelle-verbose=2 -load $(ROOT_DIR)/compiler/src/build/lib/Heartbeat.so -enable-new-pm=0 -heartbeat $(PASS_ARGUMENTS_HEARTBEAT_COMPILER) $^ -o $@

hbc: heartbeat_compiler
hb_compiler: heartbeat_compiler
heartbeat_compiler: heartbeat_compiler.bc bench.cpp loop_handler.cpp
	make preprocess
ifeq ($(ENABLE_ROLLFORWARD), true)
	make heartbeat_compiler_rf
	cp heartbeat_compiler_rf $@
else
	$(CXX) $(MACROS_HEARTBEAT_COMPILER) $(FLAGS_HEARTBEAT_COMPILER) $(OPTS_HEARTBEAT_COMPILER) $^ -o $@ $(LIBS_HEARTBEAT_COMPILER)
endif
	make postprocess

run_hbc: run_heartbeat_compiler
run_hb_compiler: run_heartbeat_compiler
run_heartbeat_compiler: heartbeat_compiler
	TASKPARTS_CPU_BASE_FREQUENCY_KHZ=$(CPU_BASE_FREQUENCY_KHZ) ./$<

# ============================================
# Heartbeat Compiler (Rollforward)
# ============================================
rf_test.bc: rf_test.cpp
	$(CXX) -O3 -emit-llvm -Xclang -no-opaque-pointers -c $< -o $@

heartbeat_compiler.s: heartbeat_compiler.bc
	$(CXX) $(MACROS_HEARTBEAT_COMPILER) $(FLAGS_HEARTBEAT_COMPILER) $(OPTS_HEARTBEAT_COMPILER) $< -S -o $@

heartbeat_compiler.rf.s: heartbeat_compiler.s
	ROLLFORWARD_PATH=$(ROLLFORWARD_PATH) $(ROLLFORWARD_COMPILER) $< $@

heartbeat_compiler.rf.o: heartbeat_compiler.rf.s
	$(CXX) -I $(ROLLFORWARD_INCLUDE) $< -c -o $@

# resolve the "undefined reference to __rf_signal" error
heartbeat_compiler.rf.ld.o: heartbeat_compiler.rf.o
	ld -r --defsym=__rf_signal=0x42 $< -o $@

rollforward_compiler.o: $(ROLLFORWARD_INCLUDE)/rollforward.c
	$(CXX) $< -c -o $@

heartbeat_compiler_rf: heartbeat_compiler.rf.ld.o rollforward_compiler.o loop_handler.cpp bench.cpp
	$(CXX) $(MACROS_HEARTBEAT_COMPILER) $(FLAGS_HEARTBEAT_COMPILER) $(OPTS_HEARTBEAT_COMPILER) $^ -o $@ $(LIBS_HEARTBEAT_COMPILER)
